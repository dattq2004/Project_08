@use "sass:map";
@use "sass:math";

$grid-breakpoints: (
    xs: 0,
    sm: 576px,
    md: 768px,
    lg: 992px,
    xl: 1200px,
    xxl: 1400px,
);
$container-max-widths: (
    sm: 540px,
    md: 720px,
    lg: 960px,
    xl: 1140px,
    // xxl: 1320px,
);
$grid-columns: 12;
$grid-gutter-width: 30px;
$gutters: (
    0: 0,
    1: 0.25,
    2: 0.5,
    3: 1,
    4: 1.5,
    5: 3,
);

%gutter-padding {
    padding-right: $grid-gutter-width * 0.5;
    padding-left: $grid-gutter-width * 0.5;
}

.container-fluid {
    --grid-gutter-x: 0;
    --grid-gutter-y: 0;

    width: 100%;
    margin-left: auto;
    margin-right: auto;
    @extend %gutter-padding;
}

.container {
    @extend.container-fluid;
}

.row {
    display: flex;
    flex-wrap: wrap;
    margin-top: calc(-1 * var(--grid-gutter-y));
    margin-left: calc(-0.5 * var(--grid-gutter-x));
    margin-right: calc(-0.5 * var(--grid-gutter-x));

    > * {
        margin-top: var(--grid-gutter-y);
        @extend %gutter-padding;
    }
}

.col {
    flex: 1 0;
}

@mixin make-gutters($infix) {
    @each $key, $value in $gutters {
        .gx#{$infix}-#{$key},
        .g#{$infix}-#{$key} {
            --grid-gutter-x: #{$grid-gutter-width * $value};
        }
        .gy#{$infix}-#{$key},
        .g#{$infix}-#{$key} {
            --grid-gutter-y: #{$grid-gutter-width * $value};
        }
    }
}

@mixin make-media-query($bp, $bypass: false) {
    @if ($bypass) {
        @content;
    } @else {
        @media (min-width: $bp) {
            @content;
        }
    }
}

@each $size, $bp in $grid-breakpoints {
    $is-xs: $size == xs;
    $infix: if($is-xs, "", "-#{$size}");
    @include make-media-query($bp, $is-xs) {
        .container {
            max-width: map.get($container-max-widths, $size);
        }
        @for $i from 1 through $grid-columns {
            .col#{$infix}-#{$i} {
                flex: 0 0 auto;
                width: math.div(100%, $grid-columns) * $i;
            }
        }
        @for $i from 1 through $grid-columns * 0.5 {
            .row-cols#{$infix}-#{$i} > * {
                flex: 0 0 auto;
                width: math.div(100%, $i);
            }
        }
        @for $i from 1 through $grid-columns {
            .offset#{$infix}-#{$i} {
                margin-left: math.div(100%, $grid-columns) * $i;
            }
        }
        @include make-gutters($infix);
    }
}
